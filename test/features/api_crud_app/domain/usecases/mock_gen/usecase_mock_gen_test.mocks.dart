// Mocks generated by Mockito 5.4.2 from annotations
// in api_crud_app/test/features/api_crud_app/domain/usecases/usecase_mock_gen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:api_crud_app/core/errors/failures.dart' as _i5;
import 'package:api_crud_app/features/crud_app/domain/entity/account_entity.dart'
    as _i6;
import 'package:api_crud_app/features/crud_app/domain/repository/account_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AccountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountRepository extends _i1.Mock implements _i3.AccountRepository {
  MockAccountRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>> addAccount(
          {required _i6.AccountEntity? accountEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAccount,
          [],
          {#accountEntity: accountEntity},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.AccountEntity>(
          this,
          Invocation.method(
            #addAccount,
            [],
            {#accountEntity: accountEntity},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>> removeAccount(
          {required String? accountEntityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [],
          {#accountEntityId: accountEntityId},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.AccountEntity>(
          this,
          Invocation.method(
            #removeAccount,
            [],
            {#accountEntityId: accountEntityId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.AccountEntity>>> getAccounts(
          {required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccounts,
          [],
          {#page: page},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.AccountEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.AccountEntity>>(
          this,
          Invocation.method(
            #getAccounts,
            [],
            {#page: page},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.AccountEntity>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>> updateAccount(
          {required _i6.AccountEntity? accountEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAccount,
          [],
          {#accountEntity: accountEntity},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.AccountEntity>(
          this,
          Invocation.method(
            #updateAccount,
            [],
            {#accountEntity: accountEntity},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>);
}

/// A class which mocks [AccountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class FakeRepo extends _i1.Mock implements _i3.AccountRepository {
  FakeRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>> addAccount(
          {required _i6.AccountEntity? accountEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAccount,
          [],
          {#accountEntity: accountEntity},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.AccountEntity>(
          this,
          Invocation.method(
            #addAccount,
            [],
            {#accountEntity: accountEntity},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>> removeAccount(
          {required String? accountEntityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [],
          {#accountEntityId: accountEntityId},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.AccountEntity>(
          this,
          Invocation.method(
            #removeAccount,
            [],
            {#accountEntityId: accountEntityId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.AccountEntity>>> getAccounts(
          {required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccounts,
          [],
          {#page: page},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.AccountEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.AccountEntity>>(
          this,
          Invocation.method(
            #getAccounts,
            [],
            {#page: page},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.AccountEntity>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>> updateAccount(
          {required _i6.AccountEntity? accountEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAccount,
          [],
          {#accountEntity: accountEntity},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.AccountEntity>(
          this,
          Invocation.method(
            #updateAccount,
            [],
            {#accountEntity: accountEntity},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.AccountEntity>>);
}
